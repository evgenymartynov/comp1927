data Tree = Leaf Num | Node Num Tree Tree

max :: Num -> Num -> Num
max a b = if (a < b)
            then b
            else a
          end;

pow :: Num -> Num -> Num
pow r p = if (p == 0)
            then 1
            else r * (pow r (p-1))
          end;

horSqueeze :: Num -> Picture -> Picture
horSqueeze size pic =
    Beside size (size+1) Empty (Beside 1 size pic Empty);

treeHeight :: Tree -> Num
treeHeight t =
    match t with
        Leaf num            -> 1
    |   Node num left right -> 1 + max (treeHeight left) (treeHeight right)
    end;

drawLeaf :: Num -> Picture
drawLeaf num = Canvas 100 100
    [ (Line (15, 15) (85, 85) )
    , (Line (15, 85) (85, 15) )
    , (Circle (50, 50) 50)
    ];

drawNode :: Num -> Picture
drawNode num = Canvas 100 100 [Circle (50, 50) 50];

drawEdge :: Picture
drawEdge = Canvas 100 100 [ Line (100, 100) (50, 0) ];

drawTree :: Tree -> Picture
drawTree root = let
    auxDraw :: Tree -> Num -> Num -> Picture
    auxDraw t height width = let
            suspend :: Tree -> Picture
            suspend t = Above 1 (2*height-3) (drawEdge) (auxDraw t (height-1) (width/2) );
        in match t with
            Leaf num            ->
                    Above 1 (2*height-1)
                        (horSqueeze (height-1) (drawLeaf num) )
                        Empty
        |   Node num left right ->
                Above 1 (2*height-1)
                    (horSqueeze (height-1) (drawNode num) )
                    (Beside 1 1
                        (suspend left)
                        (Flip (suspend right))
                    )
        end;
    rootHeight :: Num
    rootHeight = treeHeight root;
    in auxDraw root rootHeight (pow 2 (rootHeight-1));

makeTree :: Tree
makeTree = (Node 5 (Node 1 (Leaf 3) (Leaf 4)) (Leaf 2) );

makeBigTree :: Tree
makeBigTree =
    (Node 5
        (Node 1
            (Leaf 3)
            (Node 4
                (Leaf 6)
                (Node 7
                    (Leaf 8)
                    (Leaf 9)
                )
            )
        )
        (Leaf 2)
    );

main = drawTree makeBigTree
