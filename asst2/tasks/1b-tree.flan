data Tree = Leaf Num | Node Num Tree Tree

max :: Num -> Num -> Num
max a b = if (a < b)
            then b
            else a
          end;

pow :: Num -> Num -> Num
pow r p = if (p == 0)
            then 1
            else r * (pow r (p-1))
          end;

cat :: [Shape] -> [Shape] -> [Shape]
cat p q = match p with
        []   -> q
    |   x:xs -> x:(cat xs q)
    end;

treeHeight :: Tree -> Num
treeHeight t =
    match t with
        Leaf num            -> 1
    |   Node num left right ->
            1 + max (treeHeight left) (treeHeight right)
    end;

drawTree :: Tree -> Picture
drawTree root = let
    csize :: Num
    csize = 100;

    height :: Num
    height = treeHeight root;

    radius :: Num
    radius = csize / (pow 2 (height+1));

    stripHeight :: Num
    stripHeight = csize / (2*height - 1);

    auxDraw :: Tree -> Num -> Num -> Num -> [Shape]
    auxDraw t width top mid = match t with
            Leaf num            -> [ (Circle (mid, top+radius) radius) ]
        |   Node num left right -> let
                leftMidX :: Num
                leftMidX = mid - width/4;

                rightMidX :: Num
                rightMidX = mid + width/4;

                childTopY :: Num
                childTopY = top + 2*stripHeight;
            in cat
                [ Circle (mid, top+radius) radius
                , Line (mid, top+2*radius) (leftMidX, childTopY)
                , Line (mid, top+2*radius) (rightMidX, childTopY)
                ]
                (cat
                    (auxDraw left  (width/2) childTopY leftMidX)
                    (auxDraw right (width/2) childTopY rightMidX)
                )
        end;
in Canvas csize csize (auxDraw root csize 0 (csize/2));

makeFullTree :: Num -> Tree
makeFullTree depth = let
    auxGenerator :: Num -> Tree
    auxGenerator num = match num with
        0 -> (Leaf 0)
    |   x -> (Node x (auxGenerator (x-1)) (auxGenerator (x-1)) )
    end;
in auxGenerator depth;

makeBigTree :: Tree
makeBigTree =
    (Node 5
        (Node 1
            (Leaf 3)
            (Node 4
                (Leaf 6)
                (Node 7
                    (Leaf 8)
                    (Leaf 9)
                )
            )
        )
        (makeFullTree 3)
    );

main = drawTree makeBigTree
